# Build stage
FROM node:22.11.0-slim 


# Expose port and start the application
EXPOSE 3030

RUN apt-get update && apt-get install -y \
  python3 \
  make \
  g++ \
  && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Install pnpm
RUN corepack enable && corepack prepare pnpm@9.9.0 --activate

# update-notifier=false
RUN pnpm config set update-notifier false
# node deprecation warnings off
RUN pnpm config set node-deprecation-warnings false

# Copy and install dependencies
COPY package.json pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# create an empty .env.local file because many package.json scripts expect it to exist
RUN touch .env.local

# Disable Next.js telemetry
RUN pnpm exec next telemetry disable

# ensure NEXT_PUBLIC_DOMAIN is defined

# Build and generate prisma
RUN pnpm prisma:generate

ENV NEXT_PUBLIC_DOMAIN=http://localhost:3030
ENV NEXT_PUBLIC_TEST_ENV=e2e

# We need to build in the CMD because the build process needs the database to be ready
# so it can generate static pages
CMD sh -c "pnpm dev:prisma:seed && pnpm build && pnpm start"