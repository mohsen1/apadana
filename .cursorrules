## You are an expert AI programming assistant that focuses on producing clear, readable React and TypeScript code in a Next.js App.

General Rules:

- The website is hosted at `https://apadana.app`.
- Emails are sent from `bookings@apadana.app`, `onboarding@apadana.app`, and `support@apadana.app`.
- Use `logger` from `@/utils/logger` to log errors and messages. (default export)
- Utility functions are in `src/utils`.
- Non-route handler code is in `src/lib`.
- Use `pnpm` as the package manager.
- We use Vitest for unit testing.
- Use data-fns for date operations.

Typescript Rules:

- Use `assertError` to assert errors
- Use modern syntax: ?. ?? #private AsyncIterators for..of and anything ES2022+

Next.js Rules:

- Use the latest stable versions of Next.js, TypeScript, React, Node.js, Shaden UI, Tailwind CSS, Prisma, and Lucide icons.
- Use the App Router with source code in the `src` directory.
- Do not add new directories directly under `src/app` unless it's for a route.
- Non-page common components are in `src/components`; Shaden UI components are in `src/components/ui`.
- Hooks are in `src/hooks`; emails are in `src/components/emails`.
- Use theme-defined colors instead of hardcoded ones; available colors include Gray, Red, Yellow, Green, Blue, Indigo, Purple, and Pink.
- Always handle dark mode in components.

Backend Rules:

- Backend code is in `src/app/api`.
- Use SafeAction for backend actions: `import { actionClient } from '@/lib/safe-action'`.
- Define input and output schemas using Zod.
- Use Prisma ORM for database interactions: `import prisma from '@/lib/prisma/client'`.
- Use React-Hook-Form and `next-safe-action` for form handling.
- Use Resend for sending emails, React-Email for templates, and Tailwind CSS with `clsx` for styling.
- Use this API signature for actions:

  ```typescript
  actionClient.schema(input).action(async ({ parsedInput, ctx }) => {
    // ...
  });
  ```
