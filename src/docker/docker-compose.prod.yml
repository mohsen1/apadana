services:
  app_prod:
    build:
      context: ../..
      dockerfile: src/docker/Dockerfile.prod
      args:
        - RESEND_API_KEY=${RESEND_API_KEY:-re_1234567890_invalid_key}
        - VERCEL_URL=${VERCEL_URL:-localhost:3030}
        - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY:-invalid_maps_key}
        - DATABASE_URL=postgresql://admin:admin@db_prod:5432/apadana
        - VERCEL_PROJECT_PRODUCTION_URL=${VERCEL_PROJECT_PRODUCTION_URL:-https://apadana.app}
        - NEXT_PUBLIC_S3_UPLOAD_BUCKET=${NEXT_PUBLIC_S3_UPLOAD_BUCKET:-invalid_bucket}
        - NEXT_PUBLIC_S3_UPLOAD_REGION=${NEXT_PUBLIC_S3_UPLOAD_REGION:-invalid_region}
        - S3_UPLOAD_KEY=${S3_UPLOAD_KEY:-invalid_key}
        - S3_UPLOAD_SECRET=${S3_UPLOAD_SECRET:-invalid_secret}
    ports:
      - '3030:3030'
    environment:
      - PORT=3030
      - DATABASE_URL=postgresql://admin:admin@db_prod:5432/apadana
      - NODE_ENV=production
      - PRISMA_CLI_QUERY_ENGINE_TYPE=binary
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_SHARP_PATH=/app/node_modules/sharp
      - PRISMA_HIDE_UPDATE_MESSAGE=true
      - PRISMA_BINARY_TARGETS=native,linux-arm64-openssl-3.0.x,linux-musl-openssl-3.0.x
      - NEXT_PUBLIC_TEST_ENV=e2e
      - VERCEL_URL=${VERCEL_URL:-localhost:3030}
      - VERCEL_PROJECT_PRODUCTION_URL=${VERCEL_PROJECT_PRODUCTION_URL:-https://apadana.app}
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY:-invalid_maps_key}
      - NEXT_PUBLIC_S3_UPLOAD_BUCKET=${NEXT_PUBLIC_S3_UPLOAD_BUCKET:-invalid_bucket}
      - NEXT_PUBLIC_S3_UPLOAD_REGION=${NEXT_PUBLIC_S3_UPLOAD_REGION:-invalid_region}
      - S3_UPLOAD_KEY=${S3_UPLOAD_KEY:-invalid_key}
      - S3_UPLOAD_SECRET=${S3_UPLOAD_SECRET:-invalid_secret}
      - RESEND_API_KEY=${RESEND_API_KEY:-re_1234567890_invalid_key}
      - E2E_TESTING_SECRET=${E2E_TESTING_SECRET:-e2e_testing_secret_for_prod}
    depends_on:
      db_prod:
        condition: service_healthy
    command:
      - 'sh'
      - '-c'
      - 'pnpm migrate:prod && pnpm dev:prisma:seed && pnpm start'
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
        tag: '{{.Name}}'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3030/api/health']
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  db_prod:
    image: postgres:16.6
    ports:
      - '5433:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U admin -d apadana']
      interval: 5s
      timeout: 10s
      retries: 10
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=apadana
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
        tag: '{{.Name}}'
    command:
      ['postgres', '-c', 'log_statement=none', '-c', 'log_min_messages=warning']
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    restart: unless-stopped

volumes:
  postgres_data_prod:
