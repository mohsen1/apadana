services:
  app:
    build:
      context: ../..
      dockerfile: src/docker/Dockerfile.dev
    ports:
      - '3000:3000'
      - '6006:6006'
      - '5555:5555'
    volumes:
      - ../../src:/app/src
      - ../../public:/app/public
      - ../../prisma:/app/prisma
      - ../../config:/app/config
      - ../../package.json:/app/package.json
      - ../../pnpm-lock.yaml:/app/pnpm-lock.yaml
      - app_node_modules:/app/node_modules
      - pnpm_store:/root/.pnpm-store
      - next_cache:/app/.next
    environment:
      - NEXT_SHARP_PATH=/app/node_modules/sharp
      - NODE_ENV=development
      - VERCEL_URL=localhost:3000
      - VERCEL_PROJECT_PRODUCTION_URL=localhost:3000
      - DATABASE_URL=postgresql://admin:admin@db:5432/apadana
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY:-fake_maps_key_for_dev}
      - NEXT_PUBLIC_S3_UPLOAD_BUCKET=${NEXT_PUBLIC_S3_UPLOAD_BUCKET:-dev-bucket}
      - NEXT_PUBLIC_S3_UPLOAD_REGION=${NEXT_PUBLIC_S3_UPLOAD_REGION:-us-east-1}
      - S3_UPLOAD_KEY=${S3_UPLOAD_KEY:-fake_s3_key_for_dev}
      - S3_UPLOAD_SECRET=${S3_UPLOAD_SECRET:-fake_s3_secret_for_dev}
      - RESEND_API_KEY=${RESEND_API_KEY:-re_1234567890_fake_key_for_dev}
      - E2E_TESTING_SECRET=${E2E_TESTING_SECRET:-e2e_testing_secret_for_dev}
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U admin -d apadana']
      interval: 1s
      timeout: 1s
      retries: 30
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=apadana
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command:
      ['postgres', '-c', 'log_statement=none', '-c', 'log_min_messages=panic']

volumes:
  app_node_modules:
  pnpm_store:
  next_cache:
  postgres_data:
