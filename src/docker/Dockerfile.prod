# syntax=docker/dockerfile:1.4
FROM node:20.18.0-slim

WORKDIR /app

# Install build dependencies
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
  --mount=type=cache,target=/var/lib/apt,sharing=locked \
  apt-get update && \
  apt-get install -y python3 make g++ wget grep inotify-tools curl && \
  rm -rf /var/lib/apt/lists/*

# Setup pnpm
RUN corepack enable && corepack prepare pnpm@9.9.0 --activate
RUN pnpm config set store-dir /home/node/.pnpm-store \
  && pnpm config set update-notifier false \
  && pnpm config set node-deprecation-warnings false

# Install Task
RUN sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin

# Copy task configuration first
COPY Taskfile.yml ./

# Install dependencies with cache
COPY pnpm-lock.yaml ./
RUN --mount=type=cache,target=/home/node/.pnpm-store \
  task fetch

COPY package.json ./
RUN --mount=type=cache,target=/home/node/.pnpm-store \
  task install

# Copy application files
COPY . .
ENV NODE_OPTIONS=--no-warnings

EXPOSE 3030
ENV PORT=3030 \
  NODE_ENV=production

COPY src/docker/docker-entrypoint.prod.sh /usr/local/bin/docker-entrypoint.prod.sh
RUN chmod +x /usr/local/bin/docker-entrypoint.prod.sh
ENTRYPOINT ["docker-entrypoint.prod.sh"]
