version: '3.8'

services:
  base:
    image: apadana-base:dev
    build:
      context: ../..
      dockerfile: src/docker/Dockerfile.base
      tags:
        - apadana-base:dev

  nginx:
    container_name: ${COMPOSE_PROJECT_NAME:-apadana}_nginx
    image: nginx:alpine
    ports:
      - '${NGINX_PORT:-443}:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      app_dev:
        condition: service_healthy
      app_prod:
        condition: service_healthy
    networks:
      - apadana_network
    restart: unless-stopped
    command: >
      sh -c "
        echo '' && 
        echo '' && 
        echo '' && 
        echo '┌──────────────────────────────────────────┐' && 
        echo '│        Now you can access                │' && 
        echo '│        https://dev.apadana.localhost     │' && 
        echo '│        https://prod.apadana.localhost    │' && 
        echo '└──────────────────────────────────────────┘' && 
        echo '' && 
        echo '' && 
        echo '' && 
        nginx -g 'daemon off;' > /dev/null 2>&1
      "
    logging:
      driver: 'none'

  app_dev:
    container_name: ${COMPOSE_PROJECT_NAME:-apadana}_app_dev
    build:
      context: ../..
      dockerfile: src/docker/Dockerfile.dev
      args:
        BUILDKIT_INLINE_CACHE: 1
        HUSKY: 0
        NODE_ENV: development
        COMPOSE_PROJECT_NAME: ${COMPOSE_PROJECT_NAME:-apadana}
    expose:
      - '3000'
      - '6006'
      - '5555'
    volumes:
      - ../../src:/app/src
      - ../../public:/app/public
      - ../../prisma:/app/prisma
      - ../../config:/app/config
      - ../../package.json:/app/package.json
      - ../../pnpm-lock.yaml:/app/pnpm-lock.yaml
      - dev_node_modules:/app/node_modules
      - pnpm_store:/root/.pnpm-store
      - next_cache:/app/.next
    env_file:
      - ../../.env.local
    environment:
      - BUILDKIT_INLINE_CACHE=1
      - PORT=3000
      - NEXT_SHARP_PATH=/app/node_modules/sharp
      - NODE_ENV=development
      - VERCEL_URL=dev.apadana.localhost
      - DATABASE_URL=postgresql://admin:admin@db_dev:5432/apadana
      - HOST=dev.apadana.localhost
      - NEXT_PUBLIC_TEST_ENV=e2e
      - E2E_TESTING_SECRET=${E2E_TESTING_SECRET:-e2e_testing_secret_for_dev}
      - REDIS_URL=redis://redis:6379
    depends_on:
      db_dev:
        condition: service_healthy
      redis:
        condition: service_healthy
      base:
        condition: service_completed_successfully
    command: >
      sh -c "
        task dev:next
      "
    networks:
      - apadana_network
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'http://localhost:3000/api/health']
      interval: 30s
      timeout: 1s
      retries: 500
      start_period: 180s
      start_interval: 1s
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  app_prod:
    container_name: ${COMPOSE_PROJECT_NAME:-apadana}_app_prod
    build:
      context: ../..
      dockerfile: src/docker/Dockerfile.prod
      args:
        NODE_ENV: production
        E2E_TESTING_SECRET: e2e_testing_secret_for_prod
        HUSKY: 0
        BUILDKIT_INLINE_CACHE: 1
        VERCEL_URL: prod.apadana.localhost
        DATABASE_URL: postgresql://admin:admin@db_prod:5432/apadana
        COMPOSE_PROJECT_NAME: ${COMPOSE_PROJECT_NAME:-apadana}
    tmpfs:
      - /tmp
    expose:
      - '3030'
    env_file:
      - ../../.env.local
    environment:
      - BUILDKIT_INLINE_CACHE=1
      - PORT=3030
      - DATABASE_URL=postgresql://admin:admin@db_prod:5432/apadana
      - NODE_ENV=production
      - VERCEL_URL=prod.apadana.localhost
      - HOST=prod.apadana.localhost
      - E2E_TESTING_SECRET=${E2E_TESTING_SECRET:-e2e_testing_secret_for_prod}
      - NEXT_PUBLIC_TEST_ENV=e2e
      - REDIS_URL=redis://redis:6379
    depends_on:
      db_prod:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../../src:/app/src
      - ../../public:/app/public
      - ../../prisma:/app/prisma
      - ../../config:/app/config
      - ../../package.json:/app/package.json
      - ../../pnpm-lock.yaml:/app/pnpm-lock.yaml
      - prod_node_modules:/app/node_modules
      - prod_pnpm_store:/root/.pnpm-store
      - prod_next_cache:/app/.next
    networks:
      - apadana_network

    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'http://localhost:3030/api/health']
      interval: 30s
      timeout: 5s
      retries: 100
      start_period: 180s
      start_interval: 1s

  db_dev:
    container_name: ${COMPOSE_PROJECT_NAME:-apadana}_db_dev
    image: postgres:16.6
    expose:
      - '5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U admin -d apadana']
      interval: 1s
      timeout: 1s
      retries: 30
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=apadana
      - POSTGRES_LOGGING=error
    command: ['postgres', '-c', 'log_min_messages=error']
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - apadana_network

  db_prod:
    image: postgres:16.6
    expose:
      - '5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U admin -d apadana']
      interval: 5s
      timeout: 10s
      retries: 10
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=apadana
      - POSTGRES_LOGGING=error
    command: ['postgres', '-c', 'log_min_messages=error']
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - apadana_network

  db_test:
    container_name: ${COMPOSE_PROJECT_NAME:-apadana}_db_test
    image: postgres:16.6
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: apadana_test
      POSTGRES_LOGGING: error
    command: ['postgres', '-c', 'log_min_messages=error']
    ports:
      - '${TEST_DB_PORT:-5432}:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    restart: 'no'
    stop_signal: SIGINT
    stop_grace_period: 1m

  redis:
    container_name: ${COMPOSE_PROJECT_NAME:-apadana}_redis
    image: redis:7-alpine
    expose:
      - '6379'
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis_data:/data
    networks:
      - apadana_network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 5

  playwright:
    profiles: ['e2e']
    container_name: ${COMPOSE_PROJECT_NAME:-apadana}_playwright
    build:
      context: ../..
      dockerfile: src/docker/Dockerfile.playwright
      args:
        NODE_ENV: test
        HUSKY: 0
    environment:
      - NODE_ENV=test
      - E2E_TESTING_SECRET=${E2E_TESTING_SECRET:-e2e_testing_secret_for_prod}
      - BASE_URL=https://prod.apadana.localhost
      - DOCKER_CONTAINER=true
      - UPDATE_SNAPSHOTS=false
    volumes:
      - ../../src:/app/src
      - ../../public:/app/public
      - ../../prisma:/app/prisma
      - ../../config:/app/config
      - ../../package.json:/app/package.json
      - ../../pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ../../src/storybook-e2e:/app/src/storybook-e2e
      - ../../.next/playwright-report:/app/.next/playwright-report
      - playwright_node_modules:/app/node_modules
      - playwright_results:/app/test-results
    networks:
      - apadana_network
    depends_on:
      app_prod:
        condition: service_healthy
      app_dev:
        condition: service_healthy
    extra_hosts:
      - 'prod.apadana.localhost:172.17.0.1'
    dns:
      - 8.8.8.8
      - 8.8.4.4
    command: |
      sh -c "
        pnpm postinstall
        task test:e2e:ci
      "

  storybook-test:
    profiles: ['e2e']
    container_name: storybook_test
    build:
      context: ../..
      dockerfile: src/docker/Dockerfile.playwright
      args:
        NODE_ENV: test
        HUSKY: 0
    environment:
      - NODE_ENV=test
      - STORYBOOK_URL=https://storybook.apadana.localhost
      - UPDATE_SNAPSHOTS=false
    volumes:
      - ../../src:/app/src
      - ../../public:/app/public
      - ../../config:/app/config
      - ../../package.json:/app/package.json
      - ../../pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ../../.next/storybook-report:/app/.next/storybook-report
      - storybook_test_node_modules:/app/node_modules
      - storybook_test_results:/app/test-results
    networks:
      - apadana_network
    depends_on:
      app_dev:
        condition: service_healthy
      nginx:
        condition: service_started
    extra_hosts:
      - 'storybook.apadana.localhost:172.17.0.1'
    command: >
      sh -c "
        STORYBOOK_URL=https://storybook.apadana.localhost
        if [ \"$UPDATE_SNAPSHOTS\" = true ]; then
          task test:storybook:update
        else
          task test:storybook
        fi
      "

networks:
  apadana_network:
    driver: bridge
    name: ${COMPOSE_PROJECT_NAME:-apadana}_network

volumes:
  dev_node_modules:
    name: ${COMPOSE_PROJECT_NAME:-apadana}_dev_node_modules
  pnpm_store:
    name: ${COMPOSE_PROJECT_NAME:-apadana}_pnpm_store
  next_cache:
    name: ${COMPOSE_PROJECT_NAME:-apadana}_next_cache
  postgres_data_dev:
    name: ${COMPOSE_PROJECT_NAME:-apadana}_postgres_data_dev
  postgres_data_prod:
    name: ${COMPOSE_PROJECT_NAME:-apadana}_postgres_data_prod
  buildx_cache:
  redis_data:
    name: ${COMPOSE_PROJECT_NAME:-apadana}_redis_data
  prod_node_modules:
    name: ${COMPOSE_PROJECT_NAME:-apadana}_prod_node_modules
  prod_pnpm_store:
    name: ${COMPOSE_PROJECT_NAME:-apadana}_prod_pnpm_store
  prod_next_cache:
    name: ${COMPOSE_PROJECT_NAME:-apadana}_prod_next_cache
  playwright_node_modules:
  playwright_results:
  storybook_test_node_modules:
  storybook_test_results:
