services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - '3000:3000'
      - '6006:6006'
      - '5555:5555'
    volumes:
      - .:/app
      - app_node_modules:/app/node_modules
      - pnpm_store:/root/.pnpm-store
      - next_cache:/app/.next
    environment:
      - DATABASE_URL=postgresql://admin:admin@db:5432/apadana
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - NODE_OPTIONS="--max-old-space-size=8192"
      - NEXT_TELEMETRY_DISABLED=1
      - STORYBOOK_TELEMETRY_DEBUG=1
      - STORYBOOK_LOG_LEVEL=error
      - NEXT_SHARP_PATH=/app/node_modules/sharp
      - PRISMA_HIDE_UPDATE_MESSAGE=true
      - NODE_OPTIONS="--no-deprecation"
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 8G
        reservations:
          cpus: '1'
          memory: 4G
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
        tag: '{{.Name}}'
    tty: true
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  db:
    image: postgres:16
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U admin -d apadana']
      interval: 1s
      timeout: 1s
      retries: 30
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=apadana
    volumes:
      - postgres_data:/var/lib/postgresql/data
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
        tag: '{{.Name}}'
    command:
      ['postgres', '-c', 'log_statement=none', '-c', 'log_min_messages=panic']

volumes:
  app_node_modules:
  pnpm_store:
  next_cache:
  postgres_data:
