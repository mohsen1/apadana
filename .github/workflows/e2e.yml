name: E2E
on:
  deployment_status:

permissions:
  contents: read
  pull-requests: write
  actions: read
  checks: write
  deployments: read
  statuses: read

jobs:
  e2e:
    name: Playwright
    runs-on: ubuntu-24.04
    if: (github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success')
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/playwright

      - name: Run E2E Tests
        uses: actions/github-script@v7
        id: test-run
        with:
          script: |
            const { execSync } = require('child_process');
            const environment = process.env.ENVIRONMENT.toLowerCase();

            try {
              if (environment === 'production') {
                execSync('pnpm run e2e:prod', { stdio: 'inherit' });
              } else {
                execSync('pnpm run e2e:ci', { stdio: 'inherit' });
              }
            } catch (error) {
              core.setFailed(error.message);
            }
        env:
          ENVIRONMENT: ${{ github.event.deployment_status.environment }}
          BASE_URL: ${{ github.event.deployment_status.target_url }}
          VERCEL_AUTOMATION_BYPASS_SECRET: ${{ secrets.VERCEL_AUTOMATION_BYPASS_SECRET }}
          E2E_TESTING_SECRET: ${{ secrets.E2E_TESTING_SECRET }}

      - name: Report E2E Results
        if: always() && hashFiles('.next/playwright-report/**') != ''
        uses: ./.github/actions/test-report
        with:
          app-id: '1100607'
          test-name: 'E2E Tests Results'
          test-outcome: ${{ steps.test-run.outcome }}
          private-key: ${{ secrets.APADANA_AUTOMATION_GITHUB_APP_PRIVATE_KEY }}
          aws_key_id: ${{ secrets.AWS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_bucket: apadana-e2e
          source_dir: '.next/playwright-report'
          destination_dir: ${{ github.sha }}/playwright
          index_html_location_path: 'html/index.html'

  storybook:
    name: Storybook
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout ${{ github.head_ref }}

      - uses: ./.github/actions/setup
      - uses: ./.github/actions/playwright

      - name: Find missing screenshot files
        uses: actions/github-script@v7
        id: snapshot-diff
        with:
          script: |
            const { findMissingFiles } = await import('./.github/scripts/find-missing-snapshots.mjs');
            await findMissingFiles();

      - name: Test Storybook
        id: test-run
        run: |
          if [ -n "$MISSING_SNAPSHOT_FILES" ] && [ "$MISSING_SNAPSHOT_FILES" != '[]' ]; then
            echo "Missing snapshot files: $MISSING_SNAPSHOT_FILES"
            pnpm run test:storybook:update
          else
            pnpm run test:storybook
          fi
        env:
          MISSING_SNAPSHOT_FILES: ${{ steps.snapshot-diff.outputs.MISSING_SNAPSHOT_FILES }}
          VERCEL_AUTOMATION_BYPASS_SECRET: ${{ secrets.VERCEL_AUTOMATION_BYPASS_SECRET }}
          E2E_TESTING_SECRET: ${{ secrets.E2E_TESTING_SECRET }}
          VERCEL_URL: ${{ github.event.deployment_status.target_url }}

      - name: Validate snapshot changes
        if: steps.snapshot-diff.outputs.MISSING_SNAPSHOT_FILES != '[]'
        uses: actions/github-script@v7
        id: validate-snapshots
        with:
          script: |
            try {
              const { validateSnapshotChanges } = await import('./.github/scripts/validate-snapshot-changes.mjs');
              await validateSnapshotChanges();
            } catch (error) {
              core.setFailed(`Failed to validate snapshot changes: ${error.message}`);
              throw error;
            }
        env:
          MISSING_SNAPSHOT_FILES: ${{ steps.snapshot-diff.outputs.MISSING_SNAPSHOT_FILES }}

      - name: Commit snapshot changes
        if: steps.validate-snapshots.outcome == 'success'
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');
            try {
              execSync('git add src/storybook-e2e/__screenshots__/storybook-screenshots.spec.ts');
              execSync('git commit -m "Update missing snapshot files"');
              execSync('git push');
            } catch (error) {
              core.setFailed(error.message);
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Report Storybook Results
        if: always() && hashFiles('storybook-e2e-html-report/**') != ''
        uses: ./.github/actions/test-report
        with:
          app-id: '1100607'
          test-name: 'Storybook Results'
          test-outcome: ${{ steps.test-run.outcome }}
          private-key: ${{ secrets.APADANA_AUTOMATION_GITHUB_APP_PRIVATE_KEY }}
          aws_key_id: ${{ secrets.AWS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_bucket: apadana-e2e
          source_dir: 'storybook-e2e-html-report'
          destination_dir: ${{ github.sha }}/storybook
          index_html_location_path: 'storybook/index.html'
