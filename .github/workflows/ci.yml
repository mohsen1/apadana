name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches: ['main']

permissions:
  contents: write
  pull-requests: write
  actions: read
  checks: write
  deployments: read
  statuses: read

jobs:
  validate:
    if: github.event_name != 'deployment_status'
    name: ${{ matrix.task.name }}
    runs-on: macos-14
    timeout-minutes: 10
    strategy:
      fail-fast: true
      matrix:
        task:
          - name: Lint
            run: pnpm run lint:strict
          - name: Type check
            run: pnpm run typecheck
          - name: Format check
            run: pnpm run format:check
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: ${{ matrix.task.name }}
        run: ${{ matrix.task.run }}

  test:
    if: github.event_name != 'deployment_status'
    name: Run Vitest
    runs-on: ubuntu-24.04
    needs: [validate]
    timeout-minutes: 10
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: apadana_test_ci
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: touch .env.local
      - uses: docker/setup-buildx-action@v3
      - run: pnpm run test
        env:
          DATABASE_URL: 'postgresql://postgres:postgres@localhost:5432/apadana_test_ci'
          TEST_ENV: 'unit'

  fix-and-commit:
    name: Fix and commit code style
    needs: [validate]
    runs-on: ubuntu-24.04
    if: github.event_name == 'pull_request' && needs.validate.result == 'failure'
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      - uses: ./.github/actions/setup
      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git checkout ${{ github.head_ref }}
      - run: pnpm run fix
      - name: Check for changes
        id: git-check
        run: |
          git diff --exit-code || echo "changes=true" >> $GITHUB_OUTPUT
      - if: steps.git-check.outputs.changes == 'true'
        run: |
          git add -A
          git commit -m "style: automatically fix code style issues"
          git push
