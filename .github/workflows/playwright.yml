name: Playwright Tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
permissions:
  contents: write
  pages: write
  id-token: write
  issues: write
  pull-requests: write
jobs:
  test:
    name: Run Playwright tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15 # Vercel Postgres is version 15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm install -g pnpm && pnpm install
      - name: Build
        run: pnpm run build
      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps
      - name: Run Playwright tests
        run: pnpm exec playwright test
        env:
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: pk_test_dmFsdWVkLWJhdC05OS5jbGVyay5hY2NvdW50cy5kZXYk
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
          POSTGRES_URL_NO_SSL: postgresql://postgres:postgres@localhost:5432/postgres
          POSTGRES_URL_NON_POOLING: postgresql://postgres:postgres@localhost:5432/postgres
          POSTGRES_USER: postgres
          POSTGRES_HOST: localhost
          POSTGRES_PASSWORD: postgres
          POSTGRES_DATABASE: postgres

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Deploy report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: playwright-report
          destination_dir: reports/${{ github.run_number }}

      - name: Comment PR with report link
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Playwright report for this PR: https://${context.repo.owner}.github.io/${context.repo.repo}/reports/${process.env.GITHUB_RUN_NUMBER}/`
            })
