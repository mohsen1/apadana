name: Update Packages

on:
  workflow_dispatch:
    inputs:
      branch-name:
        description: 'Branch name for the updates (defaults to day-of-year format)'
        required: false
        default: ''
      package-limit:
        description: 'Maximum number of packages to update (0 for unlimited)'
        required: true
        default: '0'
        type: number
  schedule:
    # Runs at 06:00 UTC every Monday
    - cron: '0 6 * * 1'

permissions:
  contents: write
  pull-requests: write

jobs:
  update-packages:
    runs-on: ubuntu-24.04
    timeout-minutes: 90
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./.github/actions/setup

      - name: touch .env.local
        run: touch .env.local

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Start Docker service
        run: sudo service docker start

      - name: Verify Docker is running
        run: docker info

      - name: Create and checkout update branch
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # Generate branch name based on day of year if not provided
          if [ -z "${{ github.event.inputs.branch-name }}" ]; then
            BRANCH_NAME="chore/package-updates-$(date +%j)"
          else
            BRANCH_NAME="${{ github.event.inputs.branch-name }}"
          fi

          git branch -D $BRANCH_NAME || true
          git checkout -b $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Run update script
        run: pnpm tsx src/scripts/update-packages.ts --limit ${{ github.event.inputs.package-limit }}

      - name: Check for changes
        id: git-check
        run: |
          git fetch origin main
          if [[ -n "$(git diff origin/main..HEAD)" ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Push changes
        if: steps.git-check.outputs.changes == 'true'
        run: |
          git push origin ${{ env.BRANCH_NAME }}

      - name: Create Pull Request
        if: steps.git-check.outputs.changes == 'true'
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const fs = require('fs');
            const { repo, owner } = context.repo;
            const body = fs.readFileSync('package-updates-summary.md', 'utf8').toString();
            const result = await github.rest.pulls.create({
              owner,
              repo,
              title: 'Update Dependencies',
              head: '${{ env.BRANCH_NAME }}',
              body,
              base: 'main'
            });

            // Add labels to the PR
            await github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: ['dependencies', 'automated']
            });

      - name: PR Details
        if: steps.git-check.outputs.changes == 'true'
        run: |
          echo "✅ Pull Request created successfully!"
          echo "Please review the changes and merge if everything looks good."

      - name: No Changes
        if: steps.git-check.outputs.changes == 'false'
        run: |
          echo "ℹ️ No package updates were needed."
